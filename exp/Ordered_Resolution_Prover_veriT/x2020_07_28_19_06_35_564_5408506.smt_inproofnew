(assume a0 (not (r$ (lnth$ xs$ j$) (lnth$ xs$ (suc$ j$)))))
(assume a1 (r$ y0$ y1$))
(assume a3 (forall ((?v0 Nat$) (?v1 A_llist$)) (=> (less$ (enat$ ?v0) (llength$ ?v1)) (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (ldropn$ ?v0 ?v1)))))
(assume a4 (forall ((?v0 Nat$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (=> (= (ldropn$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (less$ (enat$ ?v0) (llength$ ?v1)))))
(assume a5 (= ys$ (lCons$ y0$ (lCons$ y1$ ys$a))))
(assume a6 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a7 (= ys$ (ldropn$ j$ xs$)))
(anchor :step t8 :args ((:= (?v0 Nat$) veriT_vr4) (:= (?v1 A_llist$) veriT_vr5)))
(step t8.t1 (cl (= ?v0 veriT_vr4)) :rule refl)
(step t8.t2 (cl (= (enat$ ?v0) (enat$ veriT_vr4))) :rule cong :premises (t8.t1))
(step t8.t3 (cl (= ?v1 veriT_vr5)) :rule refl)
(step t8.t4 (cl (= (llength$ ?v1) (llength$ veriT_vr5))) :rule cong :premises (t8.t3))
(step t8.t5 (cl (= (less$ (enat$ ?v0) (llength$ ?v1)) (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)))) :rule cong :premises (t8.t2 t8.t4))
(step t8.t6 (cl (= ?v1 veriT_vr5)) :rule refl)
(step t8.t7 (cl (= ?v0 veriT_vr4)) :rule refl)
(step t8.t8 (cl (= (lnth$ ?v1 ?v0) (lnth$ veriT_vr5 veriT_vr4))) :rule cong :premises (t8.t6 t8.t7))
(step t8.t9 (cl (= ?v0 veriT_vr4)) :rule refl)
(step t8.t10 (cl (= (suc$ ?v0) (suc$ veriT_vr4))) :rule cong :premises (t8.t9))
(step t8.t11 (cl (= ?v1 veriT_vr5)) :rule refl)
(step t8.t12 (cl (= (ldropn$ (suc$ ?v0) ?v1) (ldropn$ (suc$ veriT_vr4) veriT_vr5))) :rule cong :premises (t8.t10 t8.t11))
(step t8.t13 (cl (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)))) :rule cong :premises (t8.t8 t8.t12))
(step t8.t14 (cl (= ?v0 veriT_vr4)) :rule refl)
(step t8.t15 (cl (= ?v1 veriT_vr5)) :rule refl)
(step t8.t16 (cl (= (ldropn$ ?v0 ?v1) (ldropn$ veriT_vr4 veriT_vr5))) :rule cong :premises (t8.t14 t8.t15))
(step t8.t17 (cl (= (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (ldropn$ ?v0 ?v1)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5)))) :rule cong :premises (t8.t13 t8.t16))
(step t8.t18 (cl (= (=> (less$ (enat$ ?v0) (llength$ ?v1)) (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (ldropn$ ?v0 ?v1))) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5))))) :rule cong :premises (t8.t5 t8.t17))
(step t8 (cl (= (forall ((?v0 Nat$) (?v1 A_llist$)) (=> (less$ (enat$ ?v0) (llength$ ?v1)) (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (ldropn$ ?v0 ?v1)))) (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5)))))) :rule bind)
(step t9 (cl (not (= (forall ((?v0 Nat$) (?v1 A_llist$)) (=> (less$ (enat$ ?v0) (llength$ ?v1)) (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (ldropn$ ?v0 ?v1)))) (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5)))))) (not (forall ((?v0 Nat$) (?v1 A_llist$)) (=> (less$ (enat$ ?v0) (llength$ ?v1)) (= (lCons$ (lnth$ ?v1 ?v0) (ldropn$ (suc$ ?v0) ?v1)) (ldropn$ ?v0 ?v1))))) (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5))))) :rule equiv_pos2)
(step t10 (cl (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5))))) :rule th_resolution :premises (a3 t8 t9))
(anchor :step t11 :args ((:= (veriT_vr4 Nat$) veriT_vr6) (:= (veriT_vr5 A_llist$) veriT_vr7)))
(step t11.t1 (cl (= veriT_vr4 veriT_vr6)) :rule refl)
(step t11.t2 (cl (= (enat$ veriT_vr4) (enat$ veriT_vr6))) :rule cong :premises (t11.t1))
(step t11.t3 (cl (= veriT_vr5 veriT_vr7)) :rule refl)
(step t11.t4 (cl (= (llength$ veriT_vr5) (llength$ veriT_vr7))) :rule cong :premises (t11.t3))
(step t11.t5 (cl (= (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)))) :rule cong :premises (t11.t2 t11.t4))
(step t11.t6 (cl (= veriT_vr5 veriT_vr7)) :rule refl)
(step t11.t7 (cl (= veriT_vr4 veriT_vr6)) :rule refl)
(step t11.t8 (cl (= (lnth$ veriT_vr5 veriT_vr4) (lnth$ veriT_vr7 veriT_vr6))) :rule cong :premises (t11.t6 t11.t7))
(step t11.t9 (cl (= veriT_vr4 veriT_vr6)) :rule refl)
(step t11.t10 (cl (= (suc$ veriT_vr4) (suc$ veriT_vr6))) :rule cong :premises (t11.t9))
(step t11.t11 (cl (= veriT_vr5 veriT_vr7)) :rule refl)
(step t11.t12 (cl (= (ldropn$ (suc$ veriT_vr4) veriT_vr5) (ldropn$ (suc$ veriT_vr6) veriT_vr7))) :rule cong :premises (t11.t10 t11.t11))
(step t11.t13 (cl (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)))) :rule cong :premises (t11.t8 t11.t12))
(step t11.t14 (cl (= veriT_vr4 veriT_vr6)) :rule refl)
(step t11.t15 (cl (= veriT_vr5 veriT_vr7)) :rule refl)
(step t11.t16 (cl (= (ldropn$ veriT_vr4 veriT_vr5) (ldropn$ veriT_vr6 veriT_vr7))) :rule cong :premises (t11.t14 t11.t15))
(step t11.t17 (cl (= (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7)))) :rule cong :premises (t11.t13 t11.t16))
(step t11.t18 (cl (= (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5))) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) :rule cong :premises (t11.t5 t11.t17))
(step t11 (cl (= (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5)))) (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7)))))) :rule bind)
(step t12 (cl (not (= (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5)))) (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7)))))) (not (forall ((veriT_vr4 Nat$) (veriT_vr5 A_llist$)) (=> (less$ (enat$ veriT_vr4) (llength$ veriT_vr5)) (= (lCons$ (lnth$ veriT_vr5 veriT_vr4) (ldropn$ (suc$ veriT_vr4) veriT_vr5)) (ldropn$ veriT_vr4 veriT_vr5))))) (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) :rule equiv_pos2)
(step t13 (cl (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) :rule th_resolution :premises (t10 t11 t12))
(anchor :step t14 :args ((:= (?v0 Nat$) veriT_vr8) (:= (?v1 A_llist$) veriT_vr9) (:= (?v2 A$) veriT_vr10) (:= (?v3 A_llist$) veriT_vr11)))
(step t14.t1 (cl (= ?v0 veriT_vr8)) :rule refl)
(step t14.t2 (cl (= ?v1 veriT_vr9)) :rule refl)
(step t14.t3 (cl (= (ldropn$ ?v0 ?v1) (ldropn$ veriT_vr8 veriT_vr9))) :rule cong :premises (t14.t1 t14.t2))
(step t14.t4 (cl (= ?v2 veriT_vr10)) :rule refl)
(step t14.t5 (cl (= ?v3 veriT_vr11)) :rule refl)
(step t14.t6 (cl (= (lCons$ ?v2 ?v3) (lCons$ veriT_vr10 veriT_vr11))) :rule cong :premises (t14.t4 t14.t5))
(step t14.t7 (cl (= (= (ldropn$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)))) :rule cong :premises (t14.t3 t14.t6))
(step t14.t8 (cl (= ?v0 veriT_vr8)) :rule refl)
(step t14.t9 (cl (= (enat$ ?v0) (enat$ veriT_vr8))) :rule cong :premises (t14.t8))
(step t14.t10 (cl (= ?v1 veriT_vr9)) :rule refl)
(step t14.t11 (cl (= (llength$ ?v1) (llength$ veriT_vr9))) :rule cong :premises (t14.t10))
(step t14.t12 (cl (= (less$ (enat$ ?v0) (llength$ ?v1)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9)))) :rule cong :premises (t14.t9 t14.t11))
(step t14.t13 (cl (= (=> (= (ldropn$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (less$ (enat$ ?v0) (llength$ ?v1))) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9))))) :rule cong :premises (t14.t7 t14.t12))
(step t14 (cl (= (forall ((?v0 Nat$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (=> (= (ldropn$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (less$ (enat$ ?v0) (llength$ ?v1)))) (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9)))))) :rule bind)
(step t15 (cl (not (= (forall ((?v0 Nat$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (=> (= (ldropn$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (less$ (enat$ ?v0) (llength$ ?v1)))) (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9)))))) (not (forall ((?v0 Nat$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (=> (= (ldropn$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (less$ (enat$ ?v0) (llength$ ?v1))))) (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9))))) :rule equiv_pos2)
(step t16 (cl (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9))))) :rule th_resolution :premises (a4 t14 t15))
(anchor :step t17 :args ((:= (veriT_vr8 Nat$) veriT_vr12) (:= (veriT_vr9 A_llist$) veriT_vr13) (:= (veriT_vr10 A$) veriT_vr14) (:= (veriT_vr11 A_llist$) veriT_vr15)))
(step t17.t1 (cl (= veriT_vr8 veriT_vr12)) :rule refl)
(step t17.t2 (cl (= veriT_vr9 veriT_vr13)) :rule refl)
(step t17.t3 (cl (= (ldropn$ veriT_vr8 veriT_vr9) (ldropn$ veriT_vr12 veriT_vr13))) :rule cong :premises (t17.t1 t17.t2))
(step t17.t4 (cl (= veriT_vr10 veriT_vr14)) :rule refl)
(step t17.t5 (cl (= veriT_vr11 veriT_vr15)) :rule refl)
(step t17.t6 (cl (= (lCons$ veriT_vr10 veriT_vr11) (lCons$ veriT_vr14 veriT_vr15))) :rule cong :premises (t17.t4 t17.t5))
(step t17.t7 (cl (= (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)))) :rule cong :premises (t17.t3 t17.t6))
(step t17.t8 (cl (= veriT_vr8 veriT_vr12)) :rule refl)
(step t17.t9 (cl (= (enat$ veriT_vr8) (enat$ veriT_vr12))) :rule cong :premises (t17.t8))
(step t17.t10 (cl (= veriT_vr9 veriT_vr13)) :rule refl)
(step t17.t11 (cl (= (llength$ veriT_vr9) (llength$ veriT_vr13))) :rule cong :premises (t17.t10))
(step t17.t12 (cl (= (less$ (enat$ veriT_vr8) (llength$ veriT_vr9)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13)))) :rule cong :premises (t17.t9 t17.t11))
(step t17.t13 (cl (= (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9))) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule cong :premises (t17.t7 t17.t12))
(step t17 (cl (= (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9)))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13)))))) :rule bind)
(step t18 (cl (not (= (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9)))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13)))))) (not (forall ((veriT_vr8 Nat$) (veriT_vr9 A_llist$) (veriT_vr10 A$) (veriT_vr11 A_llist$)) (=> (= (ldropn$ veriT_vr8 veriT_vr9) (lCons$ veriT_vr10 veriT_vr11)) (less$ (enat$ veriT_vr8) (llength$ veriT_vr9))))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule equiv_pos2)
(step t19 (cl (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule th_resolution :premises (t16 t17 t18))
(anchor :step t20 :args ((:= (?v0 A$) veriT_vr16) (:= (?v1 A_llist$) veriT_vr17) (:= (?v2 A$) veriT_vr18) (:= (?v3 A_llist$) veriT_vr19)))
(step t20.t1 (cl (= ?v0 veriT_vr16)) :rule refl)
(step t20.t2 (cl (= ?v1 veriT_vr17)) :rule refl)
(step t20.t3 (cl (= (lCons$ ?v0 ?v1) (lCons$ veriT_vr16 veriT_vr17))) :rule cong :premises (t20.t1 t20.t2))
(step t20.t4 (cl (= ?v2 veriT_vr18)) :rule refl)
(step t20.t5 (cl (= ?v3 veriT_vr19)) :rule refl)
(step t20.t6 (cl (= (lCons$ ?v2 ?v3) (lCons$ veriT_vr18 veriT_vr19))) :rule cong :premises (t20.t4 t20.t5))
(step t20.t7 (cl (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)))) :rule cong :premises (t20.t3 t20.t6))
(step t20.t8 (cl (= ?v0 veriT_vr16)) :rule refl)
(step t20.t9 (cl (= ?v2 veriT_vr18)) :rule refl)
(step t20.t10 (cl (= (= ?v0 ?v2) (= veriT_vr16 veriT_vr18))) :rule cong :premises (t20.t8 t20.t9))
(step t20.t11 (cl (= ?v1 veriT_vr17)) :rule refl)
(step t20.t12 (cl (= ?v3 veriT_vr19)) :rule refl)
(step t20.t13 (cl (= (= ?v1 ?v3) (= veriT_vr17 veriT_vr19))) :rule cong :premises (t20.t11 t20.t12))
(step t20.t14 (cl (= (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19)))) :rule cong :premises (t20.t10 t20.t13))
(step t20.t15 (cl (= (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3))) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19))))) :rule cong :premises (t20.t7 t20.t14))
(step t20 (cl (= (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19)))))) :rule bind)
(step t21 (cl (not (= (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19)))))) (not (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3))))) (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19))))) :rule equiv_pos2)
(step t22 (cl (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19))))) :rule th_resolution :premises (a6 t20 t21))
(anchor :step t23 :args ((:= (veriT_vr16 A$) veriT_vr20) (:= (veriT_vr17 A_llist$) veriT_vr21) (:= (veriT_vr18 A$) veriT_vr22) (:= (veriT_vr19 A_llist$) veriT_vr23)))
(step t23.t1 (cl (= veriT_vr16 veriT_vr20)) :rule refl)
(step t23.t2 (cl (= veriT_vr17 veriT_vr21)) :rule refl)
(step t23.t3 (cl (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr20 veriT_vr21))) :rule cong :premises (t23.t1 t23.t2))
(step t23.t4 (cl (= veriT_vr18 veriT_vr22)) :rule refl)
(step t23.t5 (cl (= veriT_vr19 veriT_vr23)) :rule refl)
(step t23.t6 (cl (= (lCons$ veriT_vr18 veriT_vr19) (lCons$ veriT_vr22 veriT_vr23))) :rule cong :premises (t23.t4 t23.t5))
(step t23.t7 (cl (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)))) :rule cong :premises (t23.t3 t23.t6))
(step t23.t8 (cl (= veriT_vr16 veriT_vr20)) :rule refl)
(step t23.t9 (cl (= veriT_vr18 veriT_vr22)) :rule refl)
(step t23.t10 (cl (= (= veriT_vr16 veriT_vr18) (= veriT_vr20 veriT_vr22))) :rule cong :premises (t23.t8 t23.t9))
(step t23.t11 (cl (= veriT_vr17 veriT_vr21)) :rule refl)
(step t23.t12 (cl (= veriT_vr19 veriT_vr23)) :rule refl)
(step t23.t13 (cl (= (= veriT_vr17 veriT_vr19) (= veriT_vr21 veriT_vr23))) :rule cong :premises (t23.t11 t23.t12))
(step t23.t14 (cl (= (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23)))) :rule cong :premises (t23.t10 t23.t13))
(step t23.t15 (cl (= (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19))) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule cong :premises (t23.t7 t23.t14))
(step t23 (cl (= (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19)))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23)))))) :rule bind)
(step t24 (cl (not (= (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19)))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23)))))) (not (forall ((veriT_vr16 A$) (veriT_vr17 A_llist$) (veriT_vr18 A$) (veriT_vr19 A_llist$)) (= (= (lCons$ veriT_vr16 veriT_vr17) (lCons$ veriT_vr18 veriT_vr19)) (and (= veriT_vr16 veriT_vr18) (= veriT_vr17 veriT_vr19))))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule equiv_pos2)
(step t25 (cl (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule th_resolution :premises (t22 t23 t24))
(step t26 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (or (not (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15))) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13)))))) :rule qnt_cnf)
(step t27 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr20 veriT_vr22))))) :rule qnt_cnf)
(step t28 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr21 veriT_vr23))))) :rule qnt_cnf)
(step t29 (cl (or (not (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) (=> (less$ (enat$ j$) (llength$ xs$)) (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))))) :rule forall_inst :args ((:= veriT_vr6 j$) (:= veriT_vr7 xs$)))
(step t30 (cl (or (not (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) (=> (less$ (enat$ (suc$ j$)) (llength$ xs$)) (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))))) :rule forall_inst :args ((:= veriT_vr6 (suc$ j$)) (:= veriT_vr7 xs$)))
(step t31 (cl (not (=> (less$ (enat$ j$) (llength$ xs$)) (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$))))) (not (less$ (enat$ j$) (llength$ xs$))) (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) :rule implies_pos)
(step t32 (cl (not (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) (=> (less$ (enat$ j$) (llength$ xs$)) (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$))))) :rule or :premises (t29))
(step t33 (cl (=> (less$ (enat$ j$) (llength$ xs$)) (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$))))) :rule resolution :premises (t32 t13))
(step t34 (cl (not (=> (less$ (enat$ (suc$ j$)) (llength$ xs$)) (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$))))) (not (less$ (enat$ (suc$ j$)) (llength$ xs$))) (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) :rule implies_pos)
(step t35 (cl (not (forall ((veriT_vr6 Nat$) (veriT_vr7 A_llist$)) (=> (less$ (enat$ veriT_vr6) (llength$ veriT_vr7)) (= (lCons$ (lnth$ veriT_vr7 veriT_vr6) (ldropn$ (suc$ veriT_vr6) veriT_vr7)) (ldropn$ veriT_vr6 veriT_vr7))))) (=> (less$ (enat$ (suc$ j$)) (llength$ xs$)) (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$))))) :rule or :premises (t30))
(step t36 (cl (=> (less$ (enat$ (suc$ j$)) (llength$ xs$)) (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$))))) :rule resolution :premises (t35 t13))
(step t37 (cl (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (or (not (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15))) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule or :premises (t26))
(step t38 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (or (not (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15))) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$))))) :rule forall_inst :args ((:= veriT_vr12 j$) (:= veriT_vr13 xs$) (:= veriT_vr14 y0$) (:= veriT_vr15 (lCons$ y1$ ys$a))))
(step t39 (cl (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (or (not (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15))) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) :rule or :premises (t38))
(step t40 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) (not (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))))) :rule or_neg)
(step t41 (cl (not (not (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule not_not)
(step t42 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule th_resolution :premises (t41 t40))
(step t43 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) (not (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$))))) :rule or_neg)
(step t44 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$))))) :rule th_resolution :premises (t37 t39 t42 t43))
(step t45 (cl (not (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$))) :rule or_pos)
(step t46 (cl (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) :rule or :premises (t44))
(step t47 (cl (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) (less$ (enat$ j$) (llength$ xs$)))) :rule resolution :premises (t46 t19))
(step t48 (cl (not (= ys$ (lCons$ y0$ (lCons$ y1$ ys$a)))) (not (= ys$ (ldropn$ j$ xs$))) (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) :rule eq_transitive)
(step t49 (cl (= (lCons$ y0$ (lCons$ y1$ ys$a)) (ldropn$ j$ xs$))) :rule resolution :premises (t48 a5 a7))
(step t50 (cl (less$ (enat$ j$) (llength$ xs$))) :rule resolution :premises (t45 t49 t47))
(step t51 (cl (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) :rule resolution :premises (t31 t50 t33))
(step t52 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr21 veriT_vr23)))) :rule or :premises (t28))
(step t53 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr21 veriT_vr23)))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))))) :rule forall_inst :args ((:= veriT_vr20 (lnth$ xs$ j$)) (:= veriT_vr21 (ldropn$ (suc$ j$) xs$)) (:= veriT_vr22 y0$) (:= veriT_vr23 (lCons$ y1$ ys$a))))
(step t54 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr21 veriT_vr23)))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) :rule or :premises (t53))
(step t55 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) (not (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))))) :rule or_neg)
(step t56 (cl (not (not (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule not_not)
(step t57 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule th_resolution :premises (t56 t55))
(step t58 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) (not (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))))) :rule or_neg)
(step t59 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))))) :rule th_resolution :premises (t52 t54 t57 t58))
(step t60 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr20 veriT_vr22)))) :rule or :premises (t27))
(step t61 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr20 veriT_vr22)))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$)))) :rule forall_inst :args ((:= veriT_vr20 (lnth$ xs$ j$)) (:= veriT_vr21 (ldropn$ (suc$ j$) xs$)) (:= veriT_vr22 y0$) (:= veriT_vr23 (lCons$ y1$ ys$a))))
(step t62 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr20 veriT_vr22)))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) :rule or :premises (t61))
(step t63 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) (not (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))))) :rule or_neg)
(step t64 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule th_resolution :premises (t56 t63))
(step t65 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) (not (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$)))) :rule or_neg)
(step t66 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$)))) :rule th_resolution :premises (t60 t62 t64 t65))
(step t67 (cl (not (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) :rule or_pos)
(step t68 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) :rule or :premises (t59))
(step t69 (cl (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$)))) :rule resolution :premises (t68 t25))
(step t70 (cl (not (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$)) :rule or_pos)
(step t71 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) :rule or :premises (t66))
(step t72 (cl (or (not (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lnth$ xs$ j$) y0$))) :rule resolution :premises (t71 t25))
(step t73 (cl (not (= ys$ (lCons$ y0$ (lCons$ y1$ ys$a)))) (not (= ys$ (ldropn$ j$ xs$))) (not (= (ldropn$ j$ xs$) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) :rule eq_transitive)
(step t74 (cl (= (lCons$ y0$ (lCons$ y1$ ys$a)) (lCons$ (lnth$ xs$ j$) (ldropn$ (suc$ j$) xs$)))) :rule resolution :premises (t73 a5 a7 t51))
(step t75 (cl (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) :rule resolution :premises (t67 t74 t69))
(step t76 (cl (= (lnth$ xs$ j$) y0$)) :rule resolution :premises (t70 t74 t72))
(step t77 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (or (not (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15))) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$))))) :rule forall_inst :args ((:= veriT_vr12 (suc$ j$)) (:= veriT_vr13 xs$) (:= veriT_vr14 y1$) (:= veriT_vr15 ys$a)))
(step t78 (cl (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (or (not (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15))) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) :rule or :premises (t77))
(step t79 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) (not (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))))) :rule or_neg)
(step t80 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) :rule th_resolution :premises (t41 t79))
(step t81 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) (not (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$))))) :rule or_neg)
(step t82 (cl (or (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$))))) :rule th_resolution :premises (t37 t78 t80 t81))
(step t83 (cl (not (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$))) :rule or_pos)
(step t84 (cl (not (forall ((veriT_vr12 Nat$) (veriT_vr13 A_llist$) (veriT_vr14 A$) (veriT_vr15 A_llist$)) (=> (= (ldropn$ veriT_vr12 veriT_vr13) (lCons$ veriT_vr14 veriT_vr15)) (less$ (enat$ veriT_vr12) (llength$ veriT_vr13))))) (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) :rule or :premises (t82))
(step t85 (cl (not (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) (less$ (enat$ (suc$ j$)) (llength$ xs$))) :rule resolution :premises (t83 t75))
(step t86 (cl (or (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (less$ (enat$ (suc$ j$)) (llength$ xs$)))) :rule resolution :premises (t84 t19))
(step t87 (cl (less$ (enat$ (suc$ j$)) (llength$ xs$))) :rule resolution :premises (t85 t86))
(step t88 (cl (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) :rule resolution :premises (t34 t87 t36))
(step t89 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr20 veriT_vr22)))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$)))) :rule forall_inst :args ((:= veriT_vr20 y1$) (:= veriT_vr21 ys$a) (:= veriT_vr22 (lnth$ xs$ (suc$ j$))) (:= veriT_vr23 (ldropn$ (suc$ (suc$ j$)) xs$))))
(step t90 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (or (not (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23))) (= veriT_vr20 veriT_vr22)))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) :rule or :premises (t89))
(step t91 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) (not (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))))) :rule or_neg)
(step t92 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) :rule th_resolution :premises (t56 t91))
(step t93 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) (not (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$)))) :rule or_neg)
(step t94 (cl (or (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$)))) :rule th_resolution :premises (t60 t90 t92 t93))
(step t95 (cl (not (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$)) :rule or_pos)
(step t96 (cl (not (forall ((veriT_vr20 A$) (veriT_vr21 A_llist$) (veriT_vr22 A$) (veriT_vr23 A_llist$)) (= (= (lCons$ veriT_vr20 veriT_vr21) (lCons$ veriT_vr22 veriT_vr23)) (and (= veriT_vr20 veriT_vr22) (= veriT_vr21 veriT_vr23))))) (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) :rule or :premises (t94))
(step t97 (cl (or (not (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lnth$ xs$ (suc$ j$)) y1$))) :rule resolution :premises (t96 t25))
(step t98 (cl (not (= (lCons$ y1$ ys$a) (ldropn$ (suc$ j$) xs$))) (not (= (ldropn$ (suc$ j$) xs$) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) :rule eq_transitive)
(step t99 (cl (= (lCons$ y1$ ys$a) (lCons$ (lnth$ xs$ (suc$ j$)) (ldropn$ (suc$ (suc$ j$)) xs$)))) :rule resolution :premises (t98 t88 t75))
(step t100 (cl (= (lnth$ xs$ (suc$ j$)) y1$)) :rule resolution :premises (t95 t99 t97))
(step t101 (cl (not (= (lnth$ xs$ j$) y0$)) (not (= (lnth$ xs$ (suc$ j$)) y1$)) (not (r$ y0$ y1$)) (r$ (lnth$ xs$ j$) (lnth$ xs$ (suc$ j$)))) :rule eq_congruent_pred)
(step t102 (cl) :rule resolution :premises (t101 a0 a1 t76 t100))
