; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 211
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort Nat$ 0)
(declare-sort V_pvar$ 0)
(declare-sort Hmultiset$ 0)
(declare-sort S_enat_fun$ 0)
(declare-sort V_s_set_fun$ 0)
(declare-sort S_hmultiset_fun$ 0)
(declare-sort V_pvar_hmultiset_fun$ 0)
(declare-fun a$ () V_pvar_hmultiset_fun$)
(declare-fun delta$ () Nat$)
(declare-fun wt_sym$ () S_hmultiset_fun$)
(declare-fun fun_app$ (V_pvar_hmultiset_fun$ V_pvar$) Hmultiset$)
(declare-fun less_eq$ (Hmultiset$ Hmultiset$) Bool)
(declare-fun arity_sym$ () S_enat_fun$)
(declare-fun min_passign$ (V_s_set_fun$ Nat$ S_enat_fun$ S_hmultiset_fun$) V_pvar_hmultiset_fun$)
(declare-fun legal_passign$ (V_s_set_fun$ Nat$ S_enat_fun$ S_hmultiset_fun$ V_pvar_hmultiset_fun$) Bool)
(declare-fun ground_heads_var$ () V_s_set_fun$)
(assert (! (not (forall ((?v0 V_pvar$)) (less_eq$ (fun_app$ (min_passign$ ground_heads_var$ delta$ arity_sym$ wt_sym$) ?v0) (fun_app$ a$ ?v0)))) :named a0))
(assert (! (forall ((?v0 V_pvar_hmultiset_fun$)) (= (legal_passign$ ground_heads_var$ delta$ arity_sym$ wt_sym$ ?v0) (forall ((?v1 V_pvar$)) (less_eq$ (fun_app$ (min_passign$ ground_heads_var$ delta$ arity_sym$ wt_sym$) ?v1) (fun_app$ ?v0 ?v1))))) :named a1))
(check-sat)
(get-unsat-core)
