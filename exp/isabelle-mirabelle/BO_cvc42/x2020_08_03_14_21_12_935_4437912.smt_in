; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 211
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort S$ 0)
(declare-sort V$ 0)
(declare-sort Nat$ 0)
(declare-sort S_v_hd$ 0)
(declare-sort S_v_tm$ 0)
(declare-sort Nat_s_fun$ 0)
(declare-sort V_s_v_tm_fun$ 0)
(declare-fun x$ () V$)
(declare-fun db$ () Nat_s_fun$)
(declare-fun ia$ () Nat$)
(declare-fun sa$ () S_v_tm$)
(declare-fun ta$ () S_v_tm$)
(declare-fun lam$ () S$)
(declare-fun head$ (S_v_tm$) S_v_hd$)
(declare-fun subst$ (V_s_v_tm_fun$ S_v_tm$) S_v_tm$)
(declare-fun subst_db$ (S$ Nat_s_fun$ Nat$ V$ S_v_tm$) S_v_tm$)
(declare-fun raw_db_subst$ (Nat_s_fun$ Nat$ V$) V_s_v_tm_fun$)
(assert (! (not (= (head$ (subst_db$ lam$ db$ ia$ x$ ta$)) (head$ (subst_db$ lam$ db$ ia$ x$ sa$)))) :named a0))
(assert (! (forall ((?v0 Nat$) (?v1 V$) (?v2 S_v_tm$)) (= (head$ (subst_db$ lam$ db$ ?v0 ?v1 ?v2)) (head$ (subst$ (raw_db_subst$ db$ ?v0 ?v1) ?v2)))) :named a1))
(assert (! (= (head$ ta$) (head$ sa$)) :named a2))
(check-sat)
