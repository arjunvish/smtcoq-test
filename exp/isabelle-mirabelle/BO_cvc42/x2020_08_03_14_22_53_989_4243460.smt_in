; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 211
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort S$ 0)
(declare-sort V$ 0)
(declare-sort Enat$ 0)
(declare-sort S_v_hd$ 0)
(declare-sort S_enat_fun$ 0)
(declare-sort V_enat_fun$ 0)
(declare-fun uu$ () S_enat_fun$)
(declare-fun sym$ (S$) S_v_hd$)
(declare-fun uua$ () V_enat_fun$)
(declare-fun var$ (V$) S_v_hd$)
(declare-fun zeta$ () S_v_hd$)
(declare-fun fun_app$ (V_enat_fun$ V$) Enat$)
(declare-fun arity_hd$ (S_enat_fun$ V_enat_fun$ S_v_hd$) Enat$)
(declare-fun fun_app$a (S_enat_fun$ S$) Enat$)
(declare-fun infinity$ () Enat$)
(assert (! (forall ((?v0 V$)) (! (= (fun_app$ uua$ ?v0) infinity$) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 S$)) (! (= (fun_app$a uu$ ?v0) infinity$) :pattern ((fun_app$a uu$ ?v0)))) :named a1))
(assert (! (not (= (arity_hd$ uu$ uua$ zeta$) infinity$)) :named a2))
(assert (! (forall ((?v0 S$)) (= (arity_hd$ uu$ uua$ (sym$ ?v0)) infinity$)) :named a3))
(assert (! (forall ((?v0 V$)) (= (arity_hd$ uu$ uua$ (var$ ?v0)) infinity$)) :named a4))
(check-sat)
(get-unsat-core)
