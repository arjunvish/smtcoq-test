(assume a2 (not (integrable_on$ uua$ top$a)))
(assume a3 (forall ((?v0 A_c_fun$)) (=> (integrable$ lborel$ ?v0) (integrable_on$ ?v0 top$a))))
(assume a4 (integrable$ lborel$ uua$))
(anchor :step t4 :args ((:= (?v0 A_c_fun$) veriT_vr6)))
(step t4.t1 (cl (= ?v0 veriT_vr6)) :rule refl)
(step t4.t2 (cl (= (integrable$ lborel$ ?v0) (integrable$ lborel$ veriT_vr6))) :rule cong :premises (t4.t1))
(step t4.t3 (cl (= ?v0 veriT_vr6)) :rule refl)
(step t4.t4 (cl (= (integrable_on$ ?v0 top$a) (integrable_on$ veriT_vr6 top$a))) :rule cong :premises (t4.t3))
(step t4.t5 (cl (= (=> (integrable$ lborel$ ?v0) (integrable_on$ ?v0 top$a)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a)))) :rule cong :premises (t4.t2 t4.t4))
(step t4 (cl (= (forall ((?v0 A_c_fun$)) (=> (integrable$ lborel$ ?v0) (integrable_on$ ?v0 top$a))) (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a))))) :rule bind)
(step t5 (cl (not (= (forall ((?v0 A_c_fun$)) (=> (integrable$ lborel$ ?v0) (integrable_on$ ?v0 top$a))) (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a))))) (not (forall ((?v0 A_c_fun$)) (=> (integrable$ lborel$ ?v0) (integrable_on$ ?v0 top$a)))) (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a)))) :rule equiv_pos2)
(step t6 (cl (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a)))) :rule th_resolution :premises (a3 t4 t5))
(anchor :step t7 :args ((:= (veriT_vr6 A_c_fun$) veriT_vr7)))
(step t7.t1 (cl (= veriT_vr6 veriT_vr7)) :rule refl)
(step t7.t2 (cl (= (integrable$ lborel$ veriT_vr6) (integrable$ lborel$ veriT_vr7))) :rule cong :premises (t7.t1))
(step t7.t3 (cl (= veriT_vr6 veriT_vr7)) :rule refl)
(step t7.t4 (cl (= (integrable_on$ veriT_vr6 top$a) (integrable_on$ veriT_vr7 top$a))) :rule cong :premises (t7.t3))
(step t7.t5 (cl (= (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) :rule cong :premises (t7.t2 t7.t4))
(step t7 (cl (= (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a))) (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a))))) :rule bind)
(step t8 (cl (not (= (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a))) (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a))))) (not (forall ((veriT_vr6 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr6) (integrable_on$ veriT_vr6 top$a)))) (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) :rule equiv_pos2)
(step t9 (cl (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) :rule th_resolution :premises (t6 t7 t8))
(step t10 (cl (or (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (forall ((veriT_vr7 A_c_fun$)) (or (not (integrable$ lborel$ veriT_vr7)) (integrable_on$ veriT_vr7 top$a))))) :rule qnt_cnf)
(step t11 (cl (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (forall ((veriT_vr7 A_c_fun$)) (or (not (integrable$ lborel$ veriT_vr7)) (integrable_on$ veriT_vr7 top$a)))) :rule or :premises (t10))
(step t12 (cl (or (not (forall ((veriT_vr7 A_c_fun$)) (or (not (integrable$ lborel$ veriT_vr7)) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a)))) :rule forall_inst :args ((:= veriT_vr7 uua$)))
(step t13 (cl (not (forall ((veriT_vr7 A_c_fun$)) (or (not (integrable$ lborel$ veriT_vr7)) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a))) :rule or :premises (t12))
(step t14 (cl (or (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a))) (not (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))))) :rule or_neg)
(step t15 (cl (not (not (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))))) (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) :rule not_not)
(step t16 (cl (or (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a))) (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) :rule th_resolution :premises (t15 t14))
(step t17 (cl (or (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a))) (not (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a)))) :rule or_neg)
(step t18 (cl (or (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a)))) :rule th_resolution :premises (t11 t13 t16 t17))
(step t19 (cl (not (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a))) (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a)) :rule or_pos)
(step t20 (cl (not (forall ((veriT_vr7 A_c_fun$)) (=> (integrable$ lborel$ veriT_vr7) (integrable_on$ veriT_vr7 top$a)))) (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a))) :rule or :premises (t18))
(step t21 (cl (not (or (not (integrable$ lborel$ uua$)) (integrable_on$ uua$ top$a)))) :rule resolution :premises (t19 a2 a4))
(step t22 (cl) :rule resolution :premises (t20 t9 t21))
